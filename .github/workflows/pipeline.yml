name: build

on:
  push:
    branches:
      - master
#  pull_request:
#    branches:
#      - master

jobs:
  test:
    strategy:
      matrix:
        go-version: [ 1.17.x ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Generate coverage report
        run: go test ./... -coverprofile=coverage.out

      - name: Upload coverage report
        if:  ${{ matrix.os == 'ubuntu-latest'}}
        uses: codecov/codecov-action@v3

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17.7

      - name: Checkout master
        uses: actions/checkout@v3

      - name: Run Lints
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.49

  build_push:
    runs-on: ubuntu-latest
#    if: github.event_name == 'push'
    needs:
      - test
      - lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/actions:latest

  deploy:
    runs-on: ubuntu-latest
#    if: github.event_name == 'push'
    needs: build_push
    steps:
      - name: SSH connect
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # Login into DockerHub
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            # Stop current container
            docker stop my-actions

            # Remove current image
            docker rmi ruauka/actions

            # Run new container
            docker run -d --rm --name my-actions -p 8080:8000 ruauka/actions